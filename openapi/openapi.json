{
  "openapi": "3.0.0",
  "info": {
    "title": "collect resource usage in a home environment",
    "version": "0.0.0-semantic-release"
  },
  "paths": {
    "/admin/stop": {
      "post": {
        "description": "Stop konsum server.",
        "responses": {
          "200": {
            "description": "Progress message.",
            "content": {
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          }
        }
      }
    },
    "/admin/reload": {
      "post": {
        "description": "Reload konsum systemd config.",
        "responses": {
          "200": {
            "description": "Progress message.",
            "content": {
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          }
        }
      }
    },
    "/admin/backup": {
      "post": {
        "operationId": "backupDataOnServer",
        "description": "Create backup on server.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "backupData",
        "description": "Create backup.",
        "responses": {
          "200": {
            "description": "Backup data as text.",
            "content": {
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          }
        }
      }
    },
    "/state": {
      "get": {
        "description": "Retrieve service state.",
        "operationId": "getServiceState",
        "responses": {
          "200": {
            "description": "Service state.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "tags": [
        "authenticate"
      ],
      "post": {
        "description": "Login to request api token.",
        "operationId": "authenticate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token generated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed.",
            "content": {
              "application/text": {
                "schema": {
                  "$ref": "#/components/schemas/TextOnlyMessage"
                }
              }
            }
          }
        }
      }
    },
    "/category": {
      "tags": [
        "category"
      ],
      "summary": "Retrieve list of categories",
      "operationId": "getCategories",
      "get": {
        "responses": {
          "200": {
            "description": "A list of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "security": [
        {
          "konsum_auth": [
            "konsum.category"
          ]
        }
      ]
    },
    "/category/{category}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/category"
        }
      ],
      "put": {
        "operationId": "addCategory",
        "description": "Add a new category.",
        "responses": {
          "200": {
            "description": "success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "security": [
        {
          "konsum_auth": [
            "konsum.category.delete"
          ]
        }
      ],
      "delete": {
        "operationId": "deleteCategory",
        "description": "Delete a category.",
        "responses": {
          "200": {
            "description": "success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "No such category error message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/category/{category}/value": {
      "parameters": [
        {
          "$ref": "#/components/parameters/category"
        },
        {
          "name": "time",
          "in": "body",
          "description": "Time the value was present.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "getCategoryValues",
        "description": "List values of a category.",
        "responses": {
          "200": {
            "description": "Value list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Value"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unsupported content-type.",
            "content": {
              "text": "json, or text only"
            }
          }
        }
      },
      "post": {
        "description": "Insert a value into a category.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a value from a category.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/category/{category}/meter": {
      "parameters": [
        {
          "$ref": "#/components/parameters/category"
        },
        {
          "$ref": "#/components/parameters/meter"
        }
      ],
      "get": {
        "description": "List meters of a category.",
        "responses": {
          "200": {
            "description": "List of meters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meter"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Add a meter to a category.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Update a meter.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/category/{category}/note": {
      "parameters": [
        {
          "$ref": "#/components/parameters/category"
        },
        {
          "$ref": "#/components/parameters/note"
        }
      ],
      "get": {
        "description": "List notes of a category.",
        "responses": {
          "200": {
            "description": "List of notes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "add a note to a category.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Update a note.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/category/{category}/meter/{meter}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/category"
        },
        {
          "$ref": "#/components/parameters/meter"
        }
      ],
      "delete": {
        "description": "Delete a meter.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/category/{category}/note/{note}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/category"
        },
        {
          "$ref": "#/components/parameters/note"
        }
      ],
      "delete": {
        "description": "Delete a note.",
        "responses": {
          "200": {
            "description": "Success message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "category": {
        "name": "category",
        "in": "path",
        "description": "Category identifier.",
        "schema": {
          "type": "string"
        }
      },
      "meter": {
        "name": "meter",
        "in": "path",
        "description": "Meter identifier.",
        "schema": {
          "type": "string"
        }
      },
      "note": {
        "name": "note",
        "in": "path",
        "description": "Note identifier.",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "konsum_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Category": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the category."
          },
          "description": {
            "type": "string",
            "description": "The human readable description of your category."
          },
          "unit": {
            "type": "string",
            "description": "The physical measurment unit."
          }
        },
        "example": {
          "id": "EV",
          "description": "mains power",
          "unit": "m3"
        }
      },
      "Meter": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the meter."
          },
          "description": {
            "type": "string",
            "description": "The human readable description of your meter."
          },
          "unit": {
            "type": "string",
            "description": "The physical measurment unit."
          },
          "serial": {
            "type": "string",
            "description": "The serial number of the meter."
          }
        }
      },
      "Note": {
        "type": "object",
        "required": [
          "id"
        ]
      },
      "Value": {
        "type": "object",
        "required": [
          "id"
        ]
      },
      "State": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "The software version of the server."
          },
          "uptime": {
            "type": "number",
            "description": "The duration the sever is up and running."
          },
          "memory": {
            "type": "object",
            "description": "The memory usage of the server."
          }
        }
      },
      "AuthRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "TextOnlyMessage": {
        "type": "string"
      }
    }
  },
  "tags": []
}